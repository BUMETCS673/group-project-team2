{"ast":null,"code":"var _jsxFileName = \"/Users/tainaconde/Desktop/BU/CS673/group-project-team2/jobs-tracker-frontend/src/components/Job_Components/JobForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Formik, Field } from 'formik';\nimport { Row, Col, Form, FormSubtitle, HelperText } from '../../styles/styles';\nimport { useAppDispatch } from '../../app/hooks';\nimport { setJob } from '../../features/job/job-slice';\nimport { useCreateJobMutation } from '../../features/jobs/jobs-api-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobForm = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [createJob] = useCreateJobMutation(); //const job = useAppSelector(state => state.job)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        companyName: '',\n        jobTitle: '',\n        description: '',\n        status: ''\n      },\n      validate: values => {\n        let errors = {};\n\n        if (!values.companyName) {\n          errors.companyName = \"Required\";\n        }\n\n        if (!values.jobTitle) {\n          errors.jobTitle = \"Required\";\n        }\n\n        if (!values.status) {\n          errors.status = \"Required\";\n        }\n\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        console.log(values);\n        dispatch(setJob(values));\n        createJob(values);\n        setSubmitting(false);\n      },\n      children: _ref2 => {\n        let {\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          touched,\n          errors,\n          values,\n          isValid,\n          dirty\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormSubtitle, {\n            children: \"Job info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.companyName //border = {!(touched.companyName  && errors.companyName && \"1px solid red\" )}\n                ,\n                id: \"companyName\",\n                name: \"companyName\",\n                placeholder: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), touched.companyName && errors.companyName && /*#__PURE__*/_jsxDEV(HelperText, {\n                children: errors.companyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.jobTitle //border = {!(touched.jobTitle  && errors.jobTitle && \"1px solid red\")}\n                ,\n                id: \"jobTitle\",\n                name: \"jobTitle\",\n                placeholder: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), touched.jobTitle && errors.jobTitle && /*#__PURE__*/_jsxDEV(HelperText, {\n                children: errors.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: \"textarea\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.description,\n                id: \"description\",\n                name: \"description\",\n                placeholder: \"Job description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"status\",\n                onChange: handleChange,\n                placeholder: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), touched.status && errors.status && /*#__PURE__*/_jsxDEV(HelperText, {\n                children: errors.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormSubtitle, {\n            children: \"Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid || !dirty,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobForm, \"tJf97H0fY5o61MBmDOzf9O+7PmY=\", false, function () {\n  return [useAppDispatch, useCreateJobMutation];\n});\n\n_c = JobForm;\nexport default JobForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["Formik","Field","Row","Col","Form","FormSubtitle","HelperText","useAppDispatch","setJob","useCreateJobMutation","JobForm","dispatch","createJob","companyName","jobTitle","description","status","values","errors","setSubmitting","console","log","handleSubmit","handleChange","handleBlur","touched","isValid","dirty"],"sources":["/Users/tainaconde/Desktop/BU/CS673/group-project-team2/jobs-tracker-frontend/src/components/Job_Components/JobForm.tsx"],"sourcesContent":["import {Formik, FormikHelpers, FormikErrors, Field} from 'formik'\nimport {Row, Col, Form, FormSubtitle, HelperText } from '../../styles/styles'\nimport { useAppDispatch} from '../../app/hooks'\nimport { setJob }  from '../../features/job/job-slice'\nimport { useCreateJobMutation } from '../../features/jobs/jobs-api-slice'\n\ninterface Values {\n    companyName: string;\n    jobTitle: string;\n    description: string;\n    status: string;\n}\n\nconst JobForm = () =>{\n  const dispatch = useAppDispatch()\n  const [createJob] = useCreateJobMutation()\n  //const job = useAppSelector(state => state.job)\n  \n  return (\n    <div>\n      <Formik\n        initialValues={{\n          companyName: '',\n          jobTitle: '',\n          description: '',\n          status: '',\n        }}\n        validate = {(values:Values) => {\n          let errors: FormikErrors<Values> = {}\n          if (!values.companyName) {\n            errors.companyName = \"Required\"\n          }\n          if (!values.jobTitle) {\n            errors.jobTitle = \"Required\"\n          }\n          if (!values.status) {\n            errors.status = \"Required\"\n          }\n          return errors\n        }}\n        onSubmit={(values:Values, {setSubmitting}: FormikHelpers<Values>) => {\n          console.log(values)\n            dispatch(setJob(values))\n            createJob(values)\n\n            setSubmitting(false)\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          touched,\n          errors,\n          values,\n          isValid,\n          dirty\n        }) => (\n          <Form onSubmit = {handleSubmit}>\n            \n                <FormSubtitle>\n                    Job info\n                </FormSubtitle>\n                \n            \n            <Row>\n                <Col>\n                <Field \n                  onChange = {handleChange}\n                  onBlur = {handleBlur}\n                  value = {values.companyName}\n                  //border = {!(touched.companyName  && errors.companyName && \"1px solid red\" )}\n                  id=\"companyName\" \n                  name=\"companyName\" \n                  placeholder = \"Company\"\n                 />\n                 {touched.companyName && errors.companyName && (\n                    <HelperText>{errors.companyName}</HelperText>\n                  )}\n                </Col>\n                <Col>\n                    \n                    <Field\n                      onChange = {handleChange}\n                      onBlur = {handleBlur}\n                      value = {values.jobTitle}\n                      //border = {!(touched.jobTitle  && errors.jobTitle && \"1px solid red\")}\n                      id=\"jobTitle\" \n                      name=\"jobTitle\" \n                      placeholder = \"Job Title\" \n                    />\n                    {touched.jobTitle && errors.jobTitle && (\n                    <HelperText>{errors.jobTitle}</HelperText>\n                  )}\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    \n                    <Field \n                      as = \"textarea\"\n                      onChange = {handleChange}\n                      onBlur = {handleBlur}\n                      value = {values.description}\n                      id=\"description\" \n                      name=\"description\" \n                      placeholder = \"Job description...\" \n                    />\n\n                </Col>\n\n                <Col>\n              \n                    <Field name  = \"status\" onChange = {handleChange} placeholder = \"Status\"></Field>\n                    {/* <Field \n                      component = \"select\"\n                      onChange = {handleChange}\n                      \n                      //border = {!(touched.status  && errors.status && \"1px solid red\")}\n                       \n                      name=\"status\" \n                      \n                      \n                    >\n                      <option value = \"in progress\">In progress</option>\n                      <option  value = \"completed process\">Completed process</option>\n                      <option value = \"received offer\">Received Offer</option>\n                    </Field> */}\n                    {touched.status && errors.status && (\n                    <HelperText>{errors.status}</HelperText>\n                  )}\n                </Col>\n            </Row>\n            <FormSubtitle>\n                Activities\n            </FormSubtitle>\n            <Row>\n            <Col>\n                \n                \n            </Col>\n            </Row>\n          \n\n          \n\n          \n          <button type=\"submit\" disabled = {!isValid || !dirty}>Save</button>\n        </Form>\n        )}\n        \n      </Formik>\n    </div>\n)}\nexport default JobForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}