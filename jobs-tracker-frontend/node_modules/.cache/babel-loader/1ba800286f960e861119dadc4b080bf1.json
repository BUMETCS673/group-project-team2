{"ast":null,"code":"var _jsxFileName = \"/Users/tainaconde/Desktop/BU/CS673/group-project-team2/jobs-tracker-frontend/src/middleware/auth/AxiosInterceptorProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AxiosInterceptorContext = /*#__PURE__*/React.createContext({\n  isTokenSet: false\n});\n\nconst setAxiosTokenInterceptor = async accessToken => {\n  axios.interceptors.request.use(async config => {\n    if (accessToken) {\n      if (config.headers) {\n        config.headers.Authorization = `Bearer ${accessToken}`;\n      } else {\n        config.headers = {\n          'Authorization': `Bearer ${accessToken}`\n        };\n      }\n    }\n\n    return config;\n  });\n};\n\nexport const useAxiosInterceptor = () => {\n  _s();\n\n  const context = React.useContext(AxiosInterceptorContext);\n\n  if (context === undefined) {\n    throw new Error('useAxiosInterceptor must be used within an AxiosInterceptorProvider');\n  }\n\n  return context;\n};\n\n_s(useAxiosInterceptor, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport const AxiosInterceptorProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  const [isTokenSet, setIsTokenSet] = useState(false);\n  useEffect(() => {\n    const getAccessToken = async () => {\n      const audience = \"https://cs673-api-auth0.com\";\n      const accessToken = await getAccessTokenSilently({\n        audience\n      });\n      await setAxiosTokenInterceptor(accessToken);\n      setIsTokenSet(true);\n    };\n\n    getAccessToken();\n  }, [getAccessTokenSilently]);\n  return /*#__PURE__*/_jsxDEV(AxiosInterceptorContext.Provider, {\n    value: {\n      isTokenSet\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AxiosInterceptorProvider, \"CabwkxgoOovCQGFg079VhaTh5GQ=\", false, function () {\n  return [useAuth0];\n});\n\n_c = AxiosInterceptorProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxiosInterceptorProvider\");","map":{"version":3,"names":["useAuth0","React","useEffect","useState","axios","AxiosInterceptorContext","createContext","isTokenSet","setAxiosTokenInterceptor","accessToken","interceptors","request","use","config","headers","Authorization","useAxiosInterceptor","context","useContext","undefined","Error","AxiosInterceptorProvider","children","getAccessTokenSilently","setIsTokenSet","getAccessToken","audience"],"sources":["/Users/tainaconde/Desktop/BU/CS673/group-project-team2/jobs-tracker-frontend/src/middleware/auth/AxiosInterceptorProvider.tsx"],"sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport React, { useEffect, useState } from 'react';\nimport axios, { AxiosRequestConfig } from 'axios';\n\nconst AxiosInterceptorContext = React.createContext<{ isTokenSet: boolean }>({ isTokenSet: false });\n\nconst setAxiosTokenInterceptor = async (accessToken: string): Promise<void> => {\n  axios.interceptors.request.use(async (config: AxiosRequestConfig) => {\n    if (accessToken) {\n      if(config.headers) {\n        config.headers.Authorization = `Bearer ${accessToken}`\n      } else {\n        config.headers = {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      }\n    }\n    return config;\n  });\n};\n\nexport const useAxiosInterceptor = () => {\n  const context = React.useContext(AxiosInterceptorContext);\n  if (context === undefined) {\n    throw new Error('useAxiosInterceptor must be used within an AxiosInterceptorProvider');\n  }\n  return context;\n};\n\ntype AxiosInterceptorProviderProps = { children: React.ReactNode }\n\nexport const AxiosInterceptorProvider = ({ children }: AxiosInterceptorProviderProps) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [isTokenSet, setIsTokenSet] = useState(false);\n\n  useEffect(() => {\n    const getAccessToken = async () => {\n      const audience = \"https://cs673-api-auth0.com\"\n      const accessToken = await getAccessTokenSilently({ audience });\n      await setAxiosTokenInterceptor(accessToken);\n      setIsTokenSet(true);\n    };\n    getAccessToken();\n  }, [getAccessTokenSilently]);\n\n  return (\n    <AxiosInterceptorContext.Provider value={{ isTokenSet }}>\n      {children}\n    </AxiosInterceptorContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAA0C,OAA1C;;AAEA,MAAMC,uBAAuB,gBAAGJ,KAAK,CAACK,aAAN,CAA6C;EAAEC,UAAU,EAAE;AAAd,CAA7C,CAAhC;;AAEA,MAAMC,wBAAwB,GAAG,MAAOC,WAAP,IAA8C;EAC7EL,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,MAAOC,MAAP,IAAsC;IACnE,IAAIJ,WAAJ,EAAiB;MACf,IAAGI,MAAM,CAACC,OAAV,EAAmB;QACjBD,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASN,WAAY,EAArD;MACD,CAFD,MAEO;QACLI,MAAM,CAACC,OAAP,GAAiB;UACf,iBAAkB,UAASL,WAAY;QADxB,CAAjB;MAGD;IACF;;IACD,OAAOI,MAAP;EACD,CAXD;AAYD,CAbD;;AAeA,OAAO,MAAMG,mBAAmB,GAAG,MAAM;EAAA;;EACvC,MAAMC,OAAO,GAAGhB,KAAK,CAACiB,UAAN,CAAiBb,uBAAjB,CAAhB;;EACA,IAAIY,OAAO,KAAKE,SAAhB,EAA2B;IACzB,MAAM,IAAIC,KAAJ,CAAU,qEAAV,CAAN;EACD;;EACD,OAAOH,OAAP;AACD,CANM;;GAAMD,mB;;AAUb,OAAO,MAAMK,wBAAwB,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAAEC;EAAF,CAAgD;EACvF,MAAM;IAAEC;EAAF,IAA6BvB,QAAQ,EAA3C;EACA,MAAM,CAACO,UAAD,EAAaiB,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMuB,cAAc,GAAG,YAAY;MACjC,MAAMC,QAAQ,GAAG,6BAAjB;MACA,MAAMjB,WAAW,GAAG,MAAMc,sBAAsB,CAAC;QAAEG;MAAF,CAAD,CAAhD;MACA,MAAMlB,wBAAwB,CAACC,WAAD,CAA9B;MACAe,aAAa,CAAC,IAAD,CAAb;IACD,CALD;;IAMAC,cAAc;EACf,CARQ,EAQN,CAACF,sBAAD,CARM,CAAT;EAUA,oBACE,QAAC,uBAAD,CAAyB,QAAzB;IAAkC,KAAK,EAAE;MAAEhB;IAAF,CAAzC;IAAA,UACGe;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAnBM;;IAAMD,wB;UACwBrB,Q;;;KADxBqB,wB"},"metadata":{},"sourceType":"module"}