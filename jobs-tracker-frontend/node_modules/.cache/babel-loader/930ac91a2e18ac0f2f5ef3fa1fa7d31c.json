{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://x3pmfzyrll.execute-api.us-east-1.amazonaws.com/default/cs673_job',\n    prepareHeaders: (headers, _ref) => {\n      let {\n        getState\n      } = _ref;\n      const token = getState().token;\n\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n\n      return headers;\n    }\n  }),\n\n  endpoints(builder) {\n    return {\n      fetchJobs: builder.query({\n        query() {\n          let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n          return `/jobs?limit=${limit}`;\n        }\n\n      })\n    };\n  }\n\n});\nexport const {\n  useFetchJobsQuery\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","token","set","endpoints","builder","fetchJobs","query","limit","useFetchJobsQuery"],"sources":["/Users/tainaconde/Desktop/BU/CS673/group-project-team2/jobs-tracker-frontend/src/features/jobs/jobs-api-slice.ts"],"sourcesContent":["import { createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\nimport type {RootState} from '../../app/store'\n\ninterface Job {\n    id: string,\n    userId: string,\n    companyName : string,\n    jobTitle: string,\n    description: string,\n    status: string,\n    link: string,\n    createdAt: Date,\n    updatedAt: Date, \n}\n\nexport const apiSlice = createApi({\n    reducerPath: 'api',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://x3pmfzyrll.execute-api.us-east-1.amazonaws.com/default/cs673_job',\n        prepareHeaders: (headers, {getState}) => {\n            const token = (getState() as RootState).token\n            if (token) {\n                headers.set('authorization', `Bearer ${token}` )\n            }\n            return headers\n        }\n    }),\n    endpoints(builder) {\n        return {\n            fetchJobs: builder.query<Job[], number|void>({\n                query(limit = 10) {\n                    return `/jobs?limit=${limit}`\n                }\n            }) \n        }\n    }\n})\n\nexport const {useFetchJobsQuery} = apiSlice\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAAyC,8BAAzC;AAeA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAC9BG,WAAW,EAAE,KADiB;EAE9BC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE,0EADa;IAEtBC,cAAc,EAAE,CAACC,OAAD,WAAyB;MAAA,IAAf;QAACC;MAAD,CAAe;MACrC,MAAMC,KAAK,GAAID,QAAQ,EAAT,CAA0BC,KAAxC;;MACA,IAAIA,KAAJ,EAAW;QACPF,OAAO,CAACG,GAAR,CAAY,eAAZ,EAA8B,UAASD,KAAM,EAA7C;MACH;;MACD,OAAOF,OAAP;IACH;EARqB,CAAD,CAFK;;EAY9BI,SAAS,CAACC,OAAD,EAAU;IACf,OAAO;MACHC,SAAS,EAAED,OAAO,CAACE,KAAR,CAAkC;QACzCA,KAAK,GAAa;UAAA,IAAZC,KAAY,uEAAJ,EAAI;UACd,OAAQ,eAAcA,KAAM,EAA5B;QACH;;MAHwC,CAAlC;IADR,CAAP;EAOH;;AApB6B,CAAD,CAA1B;AAuBP,OAAO,MAAM;EAACC;AAAD,IAAsBd,QAA5B"},"metadata":{},"sourceType":"module"}